% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rSL.R
\name{rSL}
\alias{rSL}
\title{R-learner, implemented via SuperLearner}
\usage{
rSL(
  X,
  A,
  Y,
  Y_family = gaussian(),
  A_family = binomial(),
  SL_Y,
  SL_A,
  SL_CATE,
  cvControl = list(),
  control = list()
)
}
\arguments{
\item{X}{The predictor variables in the training data set, usually a data.frame.}

\item{A}{The exposure in the training data set. Must be a numeric vector.}

\item{Y}{The outcome in the training data set. Must be a numeric vector.}

\item{Y_family}{Either gaussian (default) or binomial.}

\item{A_family}{Either binomial (default) or gaussian.}

\item{SL_Y}{Either a character vector of prediction algorithms or a list containing character vectors. A list of functions included in the SuperLearner package can be found with listWrappers().}

\item{SL_A}{As above, but for \code{A} (the exposure) conditional on \code{X} (the predictors).}

\item{SL_CATE}{As above, but for the conditional average treatment effect (CATE).}

\item{cvControl}{Optional arguments. See \code{?Superlearner::SuperLearner} for details.}

\item{control}{Optional arguments. See \code{?Superlearner::SuperLearner} for details.}
}
\value{
An object of type \code{rSL}.
}
\description{
R-learner, implemented via SuperLearner
}
\examples{
library(SuperLearner)
SL.lib <- "SL.glmnet"
n = 100; p = 10
set.seed(1234)
X = matrix(runif(n*p,-3,3), n, p)
A = rbinom(n, 1, 0.5)
Y = pmax(X[,1], 0) * A + X[,2] + pmin(X[,3], 0) + rnorm(n)

rSL_fit <- rSL(X=X, A=A, Y=Y, SL_Y = SL.lib, SL_A = SL.lib, SL_CATE = SL.lib,
               cvControl = list(V=10))
}
